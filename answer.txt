1.1.1 Exercises-

1. After running git help command - the 1st command is clone which is used to clone a repository.
    To run this particular command we have to use - 
    git clone <web url>

2. To see the result of of git help command interectively , command is -
    git help | less


3. To see the  global configuration settings in a hidden text file use-
    cat ~/.gitconfig  

    This will show all the git configuration settings like-
    [user]
        name = moutusi
        email = moutusi.slg01@gmail.com
    [init]
        defaultBranch = main

    Now to set up the configuration i have used-
        git config --global user.name "moutusi"   - to set user name
        git config --global user.email "moutusi.slg01@gmail.com"  - to set user email
        git config --global init.defaultBranch main  - to set a branch to default



1.2.1 Exercises-

1.The name of the hidden directory used by the Git repository is -   .git  (By running ls -a command)
2. To see the hidden directory list command is - ls .git
    To see the content of git configuration file - cat .git/config


1.3.1 Exercises-
1. To create empty files in my directory repository command is - touch foo
    touch bar

2. To add foo text file in my git repository -
    git foo

    To check foo that it is staged or not, command is - git status ( It will be show in green color and staged <file> )   

3. To commit foo in repository command is -   git commit -m "foo text file added"

4.  To add bar text file in my git repository -
    git bar

    To check bar that it is staged or not, command is - git status ( It will be show in green color and staged <file> )  

5. To commit bar without -m option i have run the command git commit then vi editor will open -
    to write anything in vi editor pressed i (Insert)
    Now added Add bar text, next press Esc to leave from insert mode then pressed :wq to save and exit

6. To confirm the commits that it worked correctly used -
    git log   


1.4.1 Exercises-
1.  To create empty file baz , command is touch baz
    Now if we run git commit -am "Add baz" command it will not work because this file is not tracked or added in git repo. 

2.  if we want to add baz in staging area use git add -A and then git commit -m "Add bazz" these commands will added all the files in git repository and commited.

3.  If there is something wrong in our commit message then we can undo by using this command - git commit --amend .
    this will open a vi editor then we can coreec t our commit mesaage and save and exit.

4. For verify the message ammended properly  i have used at first git log command to get the sha (or commit id) of the last commit.
    Then for verify properly ammendedor not run - git show <SHA>



1.5.1 Exercises

1. To view the full details of commit i have used git log -p command. here -p shows all the details.

2. I created one index.html page and added h1 tag to print the "Hello, World" heading and p tag to write a paragraph "Call me Ishmael" .



1.6.1 Exercises-

1. To add a title on index.html page i have used title tag following with the message "A whale of a greeting" . It is a output of a page title.

2. To Commit the new title with a commit message i have used - t first added this file to git repository and commited by this command  git commit -m "index.html page added with a new title".
    To see the details of last commit message i have usec git log -p.

3.  After running the content of listing 1.8 into an html validator i got 2 errors. These are-
    Error: Non-space characters found without seeing a doctype first. Expected <!DOCTYPE html>.
    Error: Element head is missing a required instance of child element title.

4.     